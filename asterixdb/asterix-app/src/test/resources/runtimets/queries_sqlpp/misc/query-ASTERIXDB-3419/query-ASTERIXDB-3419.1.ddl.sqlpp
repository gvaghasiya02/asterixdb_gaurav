/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 * Description: This test case is to verify the fix for ASTERIXDB-3419
 */

drop dataverse test if exists;
create dataverse test;

use test;

create type dt1 as {__id: uuid};

create dataset users_channels1(dt1) PRIMARY KEY __id AUTOGENERATED;

create view users_channel (__id string, name string, user_id string) DEFAULT NULL AS SELECT __id, name, user_id FROM `users_channels1`;

create view users_channel_with_pk (__id string, name string, user_id string) DEFAULT NULL PRIMARY KEY (__id) NOT ENFORCED AS SELECT __id, name, user_id FROM `users_channels1`;

create view users_channel_with_nulls (__id string, name string, user_id string) DEFAULT NULL AS SELECT __id, name, user_id FROM [null, {"name":"aa"}, null, {"user_id":"AA"}] `users_channels1`;


create type dt4 as {
     n: int
};

create type dt3 as {
     a: int, b: dt4
};

create type dt2 as {
    id: string,
    y: string,
    x: dt3?
};

create dataset  col(dt2) primary key id;